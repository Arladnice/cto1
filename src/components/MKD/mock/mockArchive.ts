import {getRandomRange} from "@/lib/math.ts";

export const mockArchiveArrHeader = [
    '',
    '№',
    'Дочернее общество',
    'Месторождение',
    'Объект',
    'Участок, блок, пл. объект',
    'Технологическая позиция',
    'Тех. поз. согласно проекта',
    'Цех',
    'Сервисная организация',
    '№ Договора',
    'Тип',
    'Заводской номер',
    'Тип сигнала',
    'Группа',
    'Услуга по подписке',
    'Сигнал алгоритмов анализа',
    'Суммарное время сбоев',
    'Общее кол-во сигналов',
    'Качественные сигналы',
    'Некачественные сигналы',
    'Сбои за предыдущие...',
    'Тег сигнала в системе МКД',
    'Комментарий'
]

export const mockArchiveListGroups = {
    'Месторождение': [ //Месторождение
        'Вынгапуровское',
        'Зимнее',
        'Капитоновское',
        'Романовское',
        'Холмогорское',
        'Тазовское НГКМ',
    ],
    'Дочернее общество': [ // Дочка
        'АО "Газпромнефть-ННГ"',
        'АО "Газпромнефть-АФК"',
        'АО "Газпромнефть-ЗУМ"',
        'АО "Газпромнефть-МНГ"',
    ],
    'Объект': [ // Объект
        '[ОБ] УКПГ-ЗС ЛСУ УДХ',
        '[ОБ] НГКМ-Н ШМР',
        '[ОБ] ВКН СМР',
        '[ОБ] МНГ ЗПО',
    ],
    'Участок, блок, пл. объект': [ // Участок, блок, пл. объект
        '[УЧБЛПЛОБ] УКПГ-ЗС ЛСУ УДХ',
        '[УЧБЛПЛОБ] НГКМ-Н ШМР',
        '[УЧБЛПЛОБ] ВКН СМР',
        '[УЧБЛПЛОБ] МНГ ЗПО',
    ],
    'Технологическая позиция': [ // Технологическая позиция
        '[ТПоз] УКПГ-ЗС ЛСУ УДХ',
        '[ТПоз] НГКМ-Н ШМР',
        '[ТПоз] ВКН СМР',
        '[ТПоз] МНГ ЗПО',
    ],
    'Тех. поз. согласно проекта': [ // Тех. поз. согласно проекта
        'Групповое',
        'Индивидуальное',
        'Реализованное',
        'Завершение',
    ],
    'Цех': [ // Цех
        'УКПГ-ЗС ЛСУ УДХ',
        'НГКМ-Н ШМР',
        'ВКН СМР',
        'МНГ ЗПО',
    ],
    'Сервисная организация': [ // Сервисная организация
        'ООО НПП "ИРВИС"',
        'ООО НПО "АЛМАЗ"',
        'ООО НТК "ЮНИОР"',
        'ООО УГК "АНГОРА"',
    ],
    'Тип': [ // Тип
        'СИ',
        'СК',
        'СУ',
        'АСУ',
    ],
    'Тип сигнала': [ // Тип сигнала
        '[тип.сиг] УКПГ-ЗС ЛСУ УДХ',
        '[тип.сиг] НГКМ-Н ШМР',
        '[тип.сиг] ВКН СМР',
        '[тип.сиг] МНГ ЗПО',
    ],
    'Группа': [ // Группа
        '[группа] УКПГ-ЗС ЛСУ УДХ',
        '[группа] НГКМ-Н ШМР',
        '[группа] ВКН СМР',
        '[группа] МНГ ЗПО',
    ]
};

function getRandomFields(arr) {
    return arr[getRandomRange(0, arr.length - 1, 0)];
}

export function getNewRow(i: number) {
    return {
        check: false,
        id: i + 1,
        'Дочернее общество': getRandomFields(mockArchiveListGroups['Дочернее общество']),
        'Месторождение': getRandomFields(mockArchiveListGroups['Месторождение']),
        'Объект': getRandomFields(mockArchiveListGroups['Объект']),
        'Участок, блок, пл. объект': getRandomFields(mockArchiveListGroups['Участок, блок, пл. объект']),
        'Технологическая позиция': getRandomFields(mockArchiveListGroups['Технологическая позиция']),
        'Тех. поз. согласно проекта': getRandomFields(mockArchiveListGroups['Тех. поз. согласно проекта']),
        'Цех': getRandomFields(mockArchiveListGroups['Цех']),
        'Сервисная организация': getRandomFields(mockArchiveListGroups['Сервисная организация']),
        '№ Договора': getRandomRange(111111111, 999999999, 0),
        'Тип': getRandomFields(mockArchiveListGroups['Тип']),
        serial: getRandomRange(1111111111111, 9999999999999, 0),
        'Тип сигнала': '11.01.2011',
        'Группа': 'Эталон',
        subscriptionService: getRandomFields([true, false]),
        analysisAlgorithmSignal: 'что то написано',
        totalFailureDur: '1',
        totalNumberSignals: '43',
        highQualitySignals: '20',
        poorQualitySignals: '20',
        failuresPrevious: '18',
        signalTagMKD: 'Тэг.AI-PT18021',
        comment: 'some comment'
    }
}

export const mockArchiveArrTable =
    Array.from({length: 0}, (_, i) => (Object.values(getNewRow(i)))) as [];